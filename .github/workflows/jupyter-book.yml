name: Build pages

env:
  JULIA_VERSION: "1.7"
  PYTHON_VERSION: "3.9"

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Restore Python virtualenv
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
      - name: Download Pip cache
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - name: Install Python dependencies if cache miss
        run: pip install -r requirements.txt -r .github/requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - name: Setup Julia ${{ env.JULIA_VERSION }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ env.JULIA_VERSION }}
      - name: Cache Julia
        uses: actions/cache@v2
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/compiled
            ~/.julia/packages
          key: ${{ runner.os }}-julia-${{ hashFiles('Project.toml') }}-${{ hashFiles('Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ hashFiles('Project.toml') }}-
            ${{ runner.os }}-julia-
      - name: Install Julia dependencies
        env:
          PYTHON: python
        run: julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate(); Pkg.build("IJulia")'
      # - name: Execute notebooks in parallel
      #   run: |
      #    find docs -type f -name "*.ipynb" -print0 | parallel -0 -j2 jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --ExecutePreprocessor.kernel_name=julia-${JULIA_VERSION} --execute --inplace {}
      - name: Cache Jupyter book outputs
        uses: actions/cache@v2
        env:
          cache-name: "jb-01"
        with:
          path: ./docs/_build/.jupyter_cache/
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Manifest.toml', 'requirements.txt') }}-${{ hashFiles('**/*.ipynb') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Manifest.toml', 'requirements.txt') }}
      - name: Build website
        run: jupyter-book build docs
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          publish_dir: docs/_build/html
          full_commit_message: ${{ github.event.head_commit.message }}
